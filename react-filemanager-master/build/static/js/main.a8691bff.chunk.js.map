{"version":3,"sources":["Reducers/MainReducer.js","serviceWorker.js","config.js","Api/Api.js","Api/ApiHandler.js","Actions/Actions.js","Components/File/File.jsx","Components/FileList/FileListEmptyMessage.jsx","Components/Loader/Loader.jsx","Components/FileList/FileList.jsx","Components/ContextMenu/ContextMenuActions/CreateFolderAction.jsx","Components/ContextMenu/ContextMenuActions/UploadFileAction.jsx","Components/Navbar/ThreeDotsMenu.jsx","Components/Breadcrumb/BreadcrumbText.jsx","Components/Navbar/Navbar.jsx","Components/ContextMenu/ContextMenuActions/OpenAction.jsx","Components/ContextMenu/ContextMenuActions/RemoveAction.jsx","Components/ContextMenu/ContextMenuActions/MoveAction.jsx","Components/ContextMenu/ContextMenuActions/CopyAction.jsx","Components/ContextMenu/ContextMenuActions/EditAction.jsx","Components/ContextMenu/ContextMenuActions/RenameAction.jsx","Components/ContextMenu/ContextMenuActions/DownloadAction.jsx","Components/ContextMenu/ContextMenu.jsx","Components/Dialogs/Content/Content.jsx","Components/Dialogs/Edit/Edit.jsx","Components/Dialogs/CreateFolder/CreateFolder.jsx","Components/Dialogs/Rename/Rename.jsx","Components/File/FileSublist/FileSublist.jsx","Components/FileList/FileListSublist/FileListSublist.jsx","Components/Dialogs/Move/Move.jsx","Components/Dialogs/Copy/Copy.jsx","Components/FileUploader/UploadFileList.jsx","Components/FileUploader/FileUploader.jsx","Components/Dialogs/UploadFile/UploadFile.jsx","Components/Dialogs/Dialogs.jsx","Components/Notification/DynamicSnackbar.jsx","App.js","index.js"],"names":["defaultState","path","pathSublist","fileList","fileListSublist","fileListFilter","contextMenuVisible","contextMenuPosition","contextMenuPositionElement","selectedFiles","selectedFolderSublist","loading","loadingSublist","errorMsg","visibleDialogCreateFolder","visibleDialogUploadFile","visibleDialogContent","visibleDialogEdit","visibleDialogMove","visibleDialogCopy","visibleDialogRename","fileContentBlobUrl","fileUploadProgress","fileUploadList","MainReducer","state","action","type","Object","assign","value","sort","a","b","name","toLowerCase","filter","f","i","self","map","ff","indexOf","find","parseInt","URL","revokeObjectURL","createObjectURL","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","host","url_list","url_create_folder","url_get_content","url_download","url_upload","url_remove","url_rename","url_move","url_copy","url_edit","url_compress","url_extract","isEditableFilePattern","isImageFilePattern","isExtractableFilePattern","actions","create_folder","move","copy","copy_folder","compress","extract","edit","remove","upload","upload_by_chunks","preview_images","filenames","recursive","fetch","method","headers","body","JSON","stringify","messageTranslation","handleFetch","resolve","reject","xthen","response","contentType","get","contentDisp","isJson","test","isAttachment","ok","json","Error","blob","success","data","xcatch","errorResponse","errJson","fixPath","replace","getFileList","Promise","encodeURIComponent","API","getFileBody","filename","renameItem","newFileName","oldPath","newPath","destination","createFolder","folder","trim","directory","moveItems","length","copyItems","uploadFiles","formData","FormData","forEach","append","getActionsByFile","file","acts","push","compressible","editable","extractable","getActionsByMultipleFiles","files","fileActs","splice","getHumanFileSize","bytes","e","Math","pow","toFixed","refreshFileList","dispatch","getState","setLoading","setSelectedFiles","APIHandler","join","r","setFileList","toString","refreshFileListSublist","setLoadingSublist","setSelectedFolderSublist","setFileListSublist","getFileContent","fileName","setFileContent","setVisibleDialogContent","getFileContentForEdit","setVisibleDialogEdit","removeItems","setSelectedFileFromLastTo","lastFile","lastPreviouslySelected","pop","lastPreviouslySelectedIndex","lastSelectedIndex","toAdd","index","element","initSubList","setPathSublist","resetFileUploader","setFileUploadProgress","setVisibleDialogUploadFile","setFileUploadList","enterToPreviousDirectorySublist","slice","setPath","enterToDirectory","setFileListFilter","search","setContextMenuVisible","visible","setVisibleDialogCreateFolder","setVisibleDialogRename","setVisibleDialogMove","setVisibleDialogCopy","percentage","File","this","props","isSelected","size","handleClick","handleDoubleClick","handleContextMenu","avatarStyle","backgroundColor","blue","realSize","className","onClick","onDoubleClick","onContextMenu","data-selected","ListItem","ListItemAvatar","Avatar","style","ListItemText","primary","secondary","Component","connect","ownProps","filePath","event","preventDefault","stopPropagation","x","clientX","touches","pageX","y","clientY","pageY","shiftKey","setContextMenuPosition","ctrlKey","FileListEmptyMessage","withStyles","theme","progress","margin","spacing","unit","classes","Grid","container","justify","CircularProgress","color","FileList","fileListComponent","key","toLocaleLowerCase","callback","handleClose","MenuItem","ListItemIcon","Typography","variant","ThreeDotsMenu","anchorEl","setState","currentTarget","marginLeft","IconButton","aria-label","aria-owns","undefined","aria-haspopup","Menu","open","onClose","React","BreadcrumbText","handleClickPath","rootTitle","handleGoBack","canGoBack","separator","rootPath","data-index","lastPath","directories","dir","Button","display","paths","breakpoints","up","root","width","marginBottom","grow","flexGrow","menuButton","marginRight","title","position","borderRadius","shape","fade","palette","common","white","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","handleChange","enterToPreviousDirectoryByIndex","AppBar","Toolbar","noWrap","InputBase","placeholder","onChange","input","blobUrl","tempLink","document","createElement","href","setAttribute","click","ContextMenu","actionsComp","act","component","EditAction","RenameAction","anchorReference","anchorPosition","top","left","transformOrigin","vertical","horizontal","PaperProps","FormDialog","lastBlobUrl","content","Dialog","aria-labelledby","fullWidth","maxWidth","DialogTitle","id","DialogContent","src","alt","DialogActions","handleOpen","text","t","handleSave","textArea","minHeight","defaultValue","DialogContentText","TextField","autoFocus","label","createFolderName","folderName","form","querySelector","realName","bind","newName","FileSublist","FileListSublist","selectedPath","canMove","disabled","canCopy","UploadFileList","list","dense","List","FileUploader","refs","inputfile","handleReset","handleSelectedFiles","styles","inputreset","htmlFor","ref","multiple","handleUpload","canUpload","LinearProgress","setTimeout","target","Dialogs","DynamicSnackbar","notificationDuration","Snackbar","anchorOrigin","autoHideDuration","ContentProps","message","close","padding","createMuiTheme","typography","useNextVariants","App","init","handleHideContextMenu","Navbar","tagName","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","process","origin","addEventListener","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a8691bff.chunk.js","sourcesContent":["export const defaultState = {\n    path: [],\n    pathSublist: [],\n    fileList: [],\n    fileListSublist: [],\n    fileListFilter: null,\n    contextMenuVisible: null,\n    contextMenuPosition: [],\n    contextMenuPositionElement: null,\n    selectedFiles: [],\n    selectedFolderSublist: null,\n    loading: false,\n    loadingSublist: false,\n    errorMsg: null,\n    visibleDialogCreateFolder: false,\n    visibleDialogUploadFile: false,\n    visibleDialogContent: false,\n    visibleDialogEdit: false,\n    visibleDialogMove: false,\n    visibleDialogCopy: false,\n    visibleDialogRename: false,\n    fileContentBlobUrl: null,\n    fileUploadProgress: 0,\n    fileUploadList: []\n};\n\n/**\n * Main content reducer\n * @param {Object} state\n * @param {Object} action\n * @returns {Object}\n */\nconst MainReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case 'SET_PATH':\n            return Object.assign({}, state, {\n                path: action.value\n            });\n        case 'SET_PATH_SUB_LIST':\n            return Object.assign({}, state, {\n                pathSublist: action.value\n            });\n        case 'ENTER_TO_DIRECTORY':\n            return Object.assign({}, state, {\n                path: [...state.path, action.value]\n            });\n        case 'ENTER_TO_DIRECTORY_SUB_LIST':\n            return Object.assign({}, state, {\n                pathSublist: [...state.pathSublist, action.value]\n            });\n        case 'SET_FILE_LIST':\n            return Object.assign({}, state, {\n                fileList: action.value.sort((a, b) => a.type < b.type ? -1 : a.name.toLowerCase() > b.name.toLowerCase())\n            });\n        case 'SET_FILE_LIST_SUB_LIST':\n            return Object.assign({}, state, {\n                fileListSublist: action.value.sort((a, b) => a.type < b.type ? -1 : a.name.toLowerCase() > b.name.toLowerCase())\n            });\n        case 'SET_FILE_LIST_FILTER':\n            return Object.assign({}, state, { \n                fileListFilter: action.value\n            });\n        case 'SET_CONTEXT_MENU_VISIBLE':\n            return Object.assign({}, state, { \n                contextMenuVisible: action.value\n            });\n        case 'SET_CONTEXT_MENU_POSITION':\n            return Object.assign({}, state, { \n                contextMenuPosition: action.value\n            });\n        case 'SET_CONTEXT_MENU_POSITION_ELEMENT':\n            return Object.assign({}, state, { \n                contextMenuPositionElement: action.value\n            });\n        case 'SET_SELECTED_FILES':\n            return Object.assign({}, state, {\n                selectedFiles: (action.value).filter((f, i, self) => self.map(ff => ff.name).indexOf(f.name) === i)\n            });\n        case 'SET_SELECTED_FOLDER_SUB_LIST':\n            return Object.assign({}, state, {\n                selectedFolderSublist: action.value\n            });\n\n        case 'TOGGLE_SELECTED_FILE':\n            return Object.assign({}, state, {\n                selectedFiles: state.selectedFiles.find(f => f.name === action.value.name) ?\n                    state.selectedFiles.filter(f => f.name !== action.value.name) :\n                    [...state.selectedFiles, action.value]\n            });\n        case 'SET_FILE_UPLOAD_PROGRESS':\n            return Object.assign({}, state, {\n                fileUploadProgress: parseInt(action.value || 0)\n            });\n        case 'SET_LOADING':\n            return Object.assign({}, state, { \n                loading: action.value\n            });\n        case 'SET_LOADING_SUB_LIST':\n            return Object.assign({}, state, { \n                loadingSublist: action.value\n            });\n        case 'SET_ERROR_MSG':\n            return Object.assign({}, state, { \n                errorMsg: action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_CREATE_FOLDER':\n            return Object.assign({}, state, { \n                visibleDialogCreateFolder: !!action.value\n            });\n            \n        case 'SET_VISIBLE_DIALOG_UPLOAD_FILE':\n            return Object.assign({}, state, { \n                visibleDialogUploadFile: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_CONTENT':\n            return Object.assign({}, state, { \n                visibleDialogContent: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_EDIT':\n            return Object.assign({}, state, { \n                visibleDialogEdit: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_MOVE':\n            return Object.assign({}, state, { \n                visibleDialogMove: !!action.value\n            });\n        case 'SET_VISIBLE_DIALOG_COPY':\n            return Object.assign({}, state, { \n                visibleDialogCopy: !!action.value\n            });\n        case 'SET_VISIBLE_DIALOG_RENAME':\n            return Object.assign({}, state, { \n                visibleDialogRename: !!action.value\n            });\n        case 'SET_FILE_UPLOAD_LIST':\n            return Object.assign({}, state, {\n                fileUploadList: action.value\n            });\n\n        case 'SET_FILE_CONTENT':\n            /**\n             * Removing old blob url\n             */\n            state.fileContentBlobUrl && URL.revokeObjectURL(state.fileContentBlobUrl);\n            return Object.assign({}, state, { \n                fileContentBlobUrl: action.value ? URL.createObjectURL(action.value) : null\n            });\n\n        default:\n            return state;\n    }\n};\n\nexport default MainReducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const host = 'http://localhost:8000';\n\nexport default {\n    url_list: `${host}/filemanager/list`,\n    url_create_folder: `${host}/filemanager/dir/create`,\n    url_get_content: `${host}/filemanager/file/content`,\n    url_download: `${host}/filemanager/file/content`,\n    url_upload: `${host}/filemanager/items/upload`,\n    url_remove: `${host}/filemanager/items/remove`,\n    url_rename: `${host}/filemanager/item/move`,\n    url_move: `${host}/filemanager/items/move`,\n    url_copy: `${host}/filemanager/items/copy`,\n    url_edit: `${host}/filemanager/file/edit`,\n    url_compress: `${host}/filemanager/items/compress`,\n    url_extract: `${host}/filemanager/file/extract`,\n\n    isEditableFilePattern: /\\.(txt|diff?|patch|svg|asc|cnf|cfg|conf|html?|cfm|cgi|aspx?|ini|pl|py|md|css|cs|jsx?|jsp|log|htaccess|htpasswd|gitignore|gitattributes|env|json|atom|eml|rss|markdown|sql|xml|xslt?|sh|rb|as|bat|cmd|cob|for|ftn|frm|frx|inc|lisp|scm|coffee|php[3-6]?|java|c|cbl|go|h|scala|vb|tmpl|lock|go|yml|yaml|tsv|lst)$/i,\n    isImageFilePattern: /\\.(jpe?g|gif|bmp|png|svg|tiff?)$/i,\n    isExtractableFilePattern: /\\.(gz|tar|rar|g?zip)$/i,\n\n    actions: {\n        create_folder: true,\n        move: true,\n        copy: true,\n        copy_folder: true,\n        compress: true,\n        extract: true,\n        edit: true,\n        remove: true,\n        upload: true,\n        upload_by_chunks: true,\n        preview_images: true,\n    }\n};\n","import config from './../config.js';\n\n/**\n * Fetch API to list files from directory\n * @param {String} path\n * @returns {Object}\n */\nexport function list(path) {\n    return fetch(config.url_list + '?path=' + (encodeURIComponent(path) || '/'));\n};\n\n\n/**\n * Fetch API to create a directory\n * @param {String} path\n * @param {String} directory\n * @returns {Object}\n */\nexport function createDirectory(path, directory) {\n    return fetch(config.url_create_folder, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            path, directory\n        })\n    });\n};\n\n\n/**\n * Fetch API to get file body\n * @param {String} path\n * @returns {Object}\n */\nexport function getFileContent(path) {\n    return fetch(config.url_get_content + '?path=' + (encodeURIComponent(path) || '/'));\n};\n\n\n/**\n * Fetch API to remove a file or folder\n * @param {String} path\n * @param {Array} filenames\n * @param {Boolean} recursive\n * @returns {Object}\n */\nexport function remove(path, filenames, recursive = true) {\n    return fetch(config.url_remove, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            path, filenames, recursive\n        })\n    });\n};\n\n/**\n * Fetch API to move files\n * @param {String} path\n * @param {Array} filenames\n * @param {Boolean} recursive\n * @returns {Object}\n */\nexport function move(path, destination, filenames) {\n    return fetch(config.url_move, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            path, destination, filenames\n        })\n    });\n};\n\n/**\n * Fetch API to move files\n * @param {String} path\n * @param {Array} filenames\n * @param {Boolean} recursive\n * @returns {Object}\n */\nexport function rename(path, destination) {\n    return fetch(config.url_rename, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            path, destination\n        })\n    });\n};\n\n/**\n * Fetch API to copy files\n * @param {String} path\n * @param {Array} filenames\n * @param {Boolean} recursive\n * @returns {Object}\n */\nexport function copy(path, destination, filenames) {\n    return fetch(config.url_copy, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            path, destination, filenames\n        })\n    });\n};\n\n/**\n * Fetch API to copy files\n * @param {String} path\n * @param {Object<FileList>} fileList\n * @returns {Object}\n */\nexport function upload(path, fileList, formData = new FormData()) {\n    [...fileList].forEach(f => {\n        formData.append('file[]', f);\n    });\n    formData.append('path', path);\n\n    return fetch(config.url_upload, {\n        method: 'POST',\n        body: formData, \n        headers: {\n            // a workaround for node connector, passing the path by header\n            path: path\n        }\n    });\n};\n","import * as API from './Api.js';\nimport config from './../config.js';\n\nconst messageTranslation = {\n    'unknown_response': 'Unknown error response from connector',\n    'TypeError: Failed to fetch': 'Не удается получить ответ от соединителя.',\n};\n\n/**\n * Response handler for fetch responses\n * @param {Function} resolve\n * @param {Function} reject\n * @returns {Object}\n */\nconst handleFetch = (resolve, reject) => {\n    return {\n        xthen: (response) => {\n            const contentType = response.headers.get('content-type');\n            const contentDisp = response.headers.get('content-disposition');\n            const isJson = /(application|text)\\/json/.test(contentType);\n            const isAttachment = /attachment/.test(contentDisp);\n\n            if (! response.ok) {\n                if (isJson) {\n                    throw response.json();\n                }\n                throw Error(messageTranslation['unknown_response']);\n            }\n\n            if (isAttachment) {\n                response.blob().then(blob => {\n                    resolve(blob);\n                });\n                return;\n            }\n\n            if (isJson) {\n                response.json().then(json => {\n                    if (! json.success) {\n                        throw new Error();\n                    }\n                    resolve(json.data);\n                });\n                return;\n            }\n        },\n        xcatch: (errorResponse) => {\n            // is thrown json\n            if (errorResponse && errorResponse.then) {\n                errorResponse.then(errJson => {\n                    return reject(errJson.errorMsg || JSON.stringify(errJson));\n                });\n            } else {\n                return reject(messageTranslation[errorResponse] || errorResponse);\n            }\n        }\n    }\n}\n\n/**\n * Clean path string removing double slashes and prepending a slash\n * @param {String} path\n * @returns {String}\n */\nconst fixPath = (path) => {\n    return ('/' + path).replace(/\\/\\//g, '/');\n};\n\n/**\n * Wrap API response for retrive file liest\n * @param {String} path\n * @returns {Object}\n */\nexport const getFileList = (path) => {\n    path = fixPath(path);\n    return new Promise((resolve, reject) => {\n        return API.list(path)\n            .then(handleFetch(resolve, reject).xthen)\n            .catch(handleFetch(resolve, reject).xcatch)\n    })\n};\n\n/**\n * Wrap API response for retrive file content\n * @param {String} path\n * @returns {Object}\n */\nexport const getFileBody = (path, filename) => {\n    path = fixPath(path + '/' + filename);\n    return new Promise((resolve, reject) => {\n        return API.getFileContent(path)\n            .then(handleFetch(resolve, reject).xthen)\n            .catch(handleFetch(resolve, reject).xcatch)\n    })\n};\n\n\n/**\n * Wrap API response for retrive file content\n * @param {String} path\n * @returns {Object}\n */\nexport const renameItem = (path, filename, newFileName) => {\n    const oldPath = fixPath(path + '/' + filename);\n    const newPath = fixPath(path + '/' + newFileName);\n\n    return new Promise((resolve, reject) => {\n        return API.rename(oldPath, newPath)\n            .then(handleFetch(resolve, reject).xthen)\n            .catch(handleFetch(resolve, reject).xcatch)\n    })\n};\n\n/**\n * Wrap API response for create folder\n * @param {String} path\n * @param {String} folder\n * @returns {Object}\n */\nexport const createFolder = (path, folder) => {\n    path = fixPath(path);\n    return new Promise((resolve, reject) => {\n        if (! (folder || '').trim()) {\n            return reject('Invalid folder name');\n        }\n        return API.createDirectory(path, folder)\n            .then(handleFetch(resolve, reject).xthen)\n            .catch(handleFetch(resolve, reject).xcatch)\n    })\n};\n\n/**\n * Wrap API response for remove file or folder\n * @param {String} path\n * @param {Array} filenames\n * @param {Boolean} recursive\n * @returns {Object}\n */\nexport const removeItems = (path, filenames, recursive = true) => {\n    path = fixPath(path);\n    return new Promise((resolve, reject) => {\n        if (! filenames.length) {\n            return reject('No files to remove');\n        }\n        return API.remove(path, filenames, recursive)\n            .then(handleFetch(resolve, reject).xthen)\n            .catch(handleFetch(resolve, reject).xcatch)\n    })\n};\n\n/**\n * Wrap API response for move file or folder\n * @param {String} path\n * @param {Array} filenames\n * @param {Boolean} recursive\n * @returns {Object}\n */\nexport const moveItems = (path, destination, filenames) => {\n    path = fixPath(path);\n    destination = fixPath(destination);\n    return new Promise((resolve, reject) => {\n        if (! filenames.length) {\n            return reject('No files to move');\n        }\n        return API.move(path, destination, filenames)\n            .then(handleFetch(resolve, reject).xthen)\n            .catch(handleFetch(resolve, reject).xcatch)\n    })\n};\n\n/**\n * Wrap API response for copy file or folder\n * @param {String} path\n * @param {Array} filenames\n * @param {Boolean} recursive\n * @returns {Object}\n */\nexport const copyItems = (path, destination, filenames) => {\n    path = fixPath(path);\n    destination = fixPath(destination);\n    return new Promise((resolve, reject) => {\n        if (! filenames.length) {\n            return reject('No files to copy');\n        }\n        return API.copy(path, destination, filenames)\n            .then(handleFetch(resolve, reject).xthen)\n            .catch(handleFetch(resolve, reject).xcatch)\n    })\n};\n\n/**\n * Wrap API response for upload files\n * @param {String} path\n * @param {Object<FileList>} fileList\n * @returns {Object}\n */\nexport const uploadFiles = (path, fileList) => {\n    path = fixPath(path);\n\n    return new Promise((resolve, reject) => {\n        if (! fileList.length) {\n            return reject('No files to upload');\n        }\n        return API.upload(path, fileList)\n            .then(handleFetch(resolve, reject).xthen)\n            .catch(handleFetch(resolve, reject).xcatch)\n    })\n};\n\n/**\n * Calculate available actions for a file\n * @param {Object} file\n * @returns {Array<String>}\n */\nexport const getActionsByFile = (file, acts = []) => {\n    if (file.type === 'dir') {\n        acts.push('open');\n\n        typeof file.compressible !== 'undefined' ?\n            file.compressible && acts.push('compress'):\n            acts.push('compress');\n    }\n\n    if (file.type === 'file') {\n        acts.push('download');\n        config.isImageFilePattern.test(file.name) && acts.push('open');\n\n        typeof file.editable !== 'undefined' ?\n            file.editable && acts.push('edit'):\n            config.isEditableFilePattern.test(file.name) && acts.push('edit');\n        \n        typeof file.extractable !== 'undefined' ?\n            file.extractable && acts.push('extract'):\n            config.isExtractableFilePattern.test(file.name) && acts.push('extract');\n\n        acts.push('copy');\n    }\n\n    acts.push('move');\n    acts.push('rename');\n    acts.push('perms');\n    acts.push('remove');\n\n    return acts;\n}\n\n/**\n * Calculate available actions for selected files, excluding non coincidences\n * @param {Array<Object>} files\n * @returns {Array<String>}\n */\nexport const getActionsByMultipleFiles = (files, acts = []) => {\n    files.forEach(file => {\n        const fileActs = getActionsByFile(file);\n        // intersects previous actions with the following to leave only coincidences\n        acts = acts.length ? acts.filter(value => -1 !== fileActs.indexOf(value)) : fileActs;\n    });\n\n    if (files.length > 1) {\n        acts.splice(acts.indexOf('open'), acts.indexOf('open') >= 0);\n        acts.splice(acts.indexOf('edit'), acts.indexOf('edit') >= 0);\n        acts.splice(acts.indexOf('compress'), acts.indexOf('compress') >= 0);\n        acts.splice(acts.indexOf('download'), acts.indexOf('download') >= 0);\n        acts.splice(acts.indexOf('rename'), acts.indexOf('rename') >= 0);\n        acts.push('compress');\n    }\n    return acts;\n}\n\n/**\n * Calculate file size by bytes in human readable format\n * @param {Number} bytes\n * @returns {String}\n */\nexport const getHumanFileSize = (bytes) => {\n    const e = (Math.log(bytes) / Math.log(1e3)) | 0;\n    return +(bytes / Math.pow(1e3, e)).toFixed(2) + ' ' + ('kMGTPEZY'[e - 1] || '') + 'B';\n};","import * as APIHandler from '../Api/ApiHandler.js';\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const uploadFiles = (fileList) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setSelectedFiles([]));\n    dispatch(setFileUploadProgress(50));\n\n    APIHandler.uploadFiles(path.join('/'), fileList).then(r => {\n        dispatch(setFileUploadProgress(100));\n        setTimeout(f => {\n            dispatch(resetFileUploader());\n        }, 300);\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const refreshFileList = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setSelectedFiles([]));\n\n    APIHandler.getFileList(path.join('/')).then(r => {\n        dispatch(setLoading(false));\n        dispatch(setFileList(r));\n    }).catch(r => {\n        dispatch(setFileList([]));\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const refreshFileListSublist = () => (dispatch, getState) => {\n    const { pathSublist } = getState();\n    dispatch(setLoadingSublist(true));\n    dispatch(setSelectedFolderSublist(null));\n\n    APIHandler.getFileList(pathSublist.join('/')).then(r => {\n        dispatch(setLoadingSublist(false));\n        dispatch(setFileListSublist(r));\n    }).catch(r => {\n        dispatch(setFileListSublist([]));\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoadingSublist(false));\n    });\n};\n\n\n/**\n * Request API to get file content then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const getFileContent = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n\n    dispatch(setLoading(true));\n    dispatch(setFileContent(null));\n    dispatch(setVisibleDialogContent(true));\n    APIHandler.getFileBody(path.join('/'), fileName).then(blob => {\n        dispatch(setFileContent(blob));\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to rename file then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const renameItem = (fileName, newFileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    APIHandler.renameItem(path.join('/'), fileName, newFileName).then(blob => {\n        dispatch(setVisibleDialogRename(false));\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to get download file then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const downloadFile = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    APIHandler.getFileBody(path.join('/'), fileName).then(blob => {\n        // TODO workaround large files disables ui for long time\n        const blobUrl = window.URL.createObjectURL(blob);\n        let tempLink = window.document.createElement('a');\n        tempLink.href = blobUrl;\n        tempLink.setAttribute('download', fileName);\n        tempLink.click();\n        window.URL.revokeObjectURL(blobUrl);\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to get file content then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const getFileContentForEdit = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setFileContent(null));\n    dispatch(setVisibleDialogEdit(true));\n    APIHandler.getFileBody(path.join('/'), fileName).then(blob => {\n        dispatch(setFileContent(blob));\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to create a folder then dispatch defined events\n * @param {String} createFolderName\n * @returns {Function}\n */\nexport const createNewFolder = (createFolderName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n\n    APIHandler.createFolder(path.join('/'), createFolderName).then(r => {\n        dispatch(setVisibleDialogCreateFolder(false));\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to remove an item then dispatch defined events\n * @param {Array} filenames\n * @returns {Function}\n */\nexport const removeItems = (files) => (dispatch, getState) => {\n    const { path } = getState();\n    const filenames = files.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.removeItems(path.join('/'), filenames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to move an item then dispatch defined events\n * @param {Array} filenames\n * @returns {Function}\n */\nexport const moveItems = (files) => (dispatch, getState) => {\n    const { path, pathSublist, selectedFolderSublist } = getState();\n    const destination = pathSublist.join('/') + '/' + selectedFolderSublist.name;\n    const filenames = files.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.moveItems(path.join('/'), destination, filenames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(setVisibleDialogMove(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to copy an item then dispatch defined events\n * @param {Array} filenames\n * @returns {Function}\n */\nexport const copyItems = (files) => (dispatch, getState) => {\n    const { path, pathSublist, selectedFolderSublist } = getState();\n    const destination = pathSublist.join('/') + '/' + selectedFolderSublist.name;\n    const filenames = files.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.copyItems(path.join('/'), destination, filenames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(setVisibleDialogCopy(false));\n        dispatch(refreshFileList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * This handles multiple selection by using shift key\n * @param {Object} lastFile\n * @returns {Function}\n */\nexport const setSelectedFileFromLastTo = (lastFile) => (dispatch, getState) => {\n    const { fileList, selectedFiles } = getState();\n\n    const lastPreviouslySelected = [...selectedFiles].pop();\n    const lastPreviouslySelectedIndex = fileList.indexOf(fileList.find(f => f.name === lastPreviouslySelected.name))\n    const lastSelectedIndex = fileList.indexOf(fileList.find(f => f.name === lastFile.name))\n\n    let toAdd = [];\n    if (lastSelectedIndex > lastPreviouslySelectedIndex) {\n        toAdd = fileList.filter((index, element) => {\n            return fileList.indexOf(index) <= lastSelectedIndex && fileList.indexOf(index) >= lastPreviouslySelectedIndex\n        });\n    } else {\n        toAdd = fileList.filter((index, element) => {\n            return fileList.indexOf(index) >= lastSelectedIndex && fileList.indexOf(index) <= lastPreviouslySelectedIndex\n        });\n    }\n    dispatch(setSelectedFiles([...selectedFiles, ...toAdd]));\n};\n\n\n/**\n * @returns {Function}\n */\nexport const initSubList = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setSelectedFolderSublist(null));\n    dispatch(setFileListSublist([]));    \n    dispatch(setPathSublist([...path]));\n    dispatch(refreshFileListSublist());\n};\n\nexport const resetFileUploader = () => (dispatch, getState) => {\n    dispatch(setFileUploadProgress(0));\n    dispatch(setVisibleDialogUploadFile(false));\n    dispatch(setFileUploadList([]));\n};\n\nexport const enterToPreviousDirectory = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setPath(path.slice(0, -1)));\n    dispatch(setFileListFilter(null));\n    dispatch(refreshFileList());\n};\n\nexport const enterToPreviousDirectoryByIndex = (index) => (dispatch, getState) => {\n    const { path } = getState();\n    const newPath = [...path].slice(0, ++index);\n    dispatch(setPath(newPath));\n    dispatch(refreshFileList());\n    dispatch(setFileListFilter(null));\n};\n\nexport const enterToPreviousDirectorySublist = () => (dispatch, getState) => {\n    const { pathSublist } = getState();\n    dispatch(setPathSublist(pathSublist.slice(0, -1)));\n    dispatch(refreshFileListSublist());\n};\n\nexport const setPath = (path) => {\n    return {\n        type: 'SET_PATH',\n        value: path\n    };\n};\n\nexport const setPathSublist = (path) => {\n    return {\n        type: 'SET_PATH_SUB_LIST',\n        value: path\n    };\n};\n\nexport const enterToDirectory = (directory) => (dispatch, getState) => {\n    dispatch({\n        type: 'ENTER_TO_DIRECTORY',\n        value: directory\n    });\n    dispatch(setFileListFilter(null));\n    dispatch(refreshFileList());\n};\n\nexport const enterToDirectorySublist = (directory) => (dispatch, getState) => {\n    dispatch({\n        type: 'ENTER_TO_DIRECTORY_SUB_LIST',\n        value: directory\n    });\n    dispatch(refreshFileListSublist());\n};\n\nexport const setFileList = (fileList) => {\n    return {\n        type: 'SET_FILE_LIST',\n        value: fileList\n    };\n};\n\nexport const setFileListSublist = (fileList) => {\n    return {\n        type: 'SET_FILE_LIST_SUB_LIST',\n        value: fileList\n    };\n};\n\nexport const setSelectedFiles = (files) => {\n    return {\n        type: 'SET_SELECTED_FILES',\n        value: files\n    };\n};\n\nexport const setSelectedFolderSublist = (file) => {\n    return {\n        type: 'SET_SELECTED_FOLDER_SUB_LIST',\n        value: file\n    };\n};\n\nexport const setFileListFilter = (search) => {\n    return {\n        type: 'SET_FILE_LIST_FILTER',\n        value: search\n    };\n};\n\nexport const setContextMenuVisible = (visible) => {\n    return {\n        type: 'SET_CONTEXT_MENU_VISIBLE',\n        value: !!visible\n    };\n};\n\nexport const setContextMenuPosition = (x, y) => {\n    return {\n        type: 'SET_CONTEXT_MENU_POSITION',\n        value: [x, y]\n    };\n};\n\nexport const setContextMenuPositionElement = (element) => {\n    return {\n        type: 'SET_CONTEXT_MENU_POSITION_ELEMENT',\n        value: element\n    };\n};\n\nexport const toggleSelectedFile = (file) => {\n    return {\n        type: 'TOGGLE_SELECTED_FILE',\n        value: file\n    };\n};\n\nexport const rightClickOnFile = (file) => (dispatch, getState) => {\n    const { selectedFiles } = getState();\n    const isSelected = selectedFiles.indexOf(selectedFiles.find(f => f.name === file.name)) !== -1;\n\n    !isSelected && dispatch(setSelectedFiles([file]));\n};\n\nexport const setLoading = (value) => {\n    return {\n        type: 'SET_LOADING',\n        value: value\n    };\n};\n\nexport const setLoadingSublist = (value) => {\n    return {\n        type: 'SET_LOADING_SUB_LIST',\n        value: value\n    };\n};\n\nexport const setVisibleDialogCreateFolder = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_CREATE_FOLDER',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogUploadFile = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_UPLOAD_FILE',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogRename = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_RENAME',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogMove = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_MOVE',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogCopy = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_COPY',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogContent = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_CONTENT',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogEdit = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_EDIT',\n        value: !!visible\n    };\n};\n\nexport const setFileContent = (blob) => {\n   return {\n        type: 'SET_FILE_CONTENT',\n        value: blob\n    };\n};\n\nexport const setFileUploadProgress = (percentage) => {\n   return {\n        type: 'SET_FILE_UPLOAD_PROGRESS',\n        value: percentage\n    };\n};\n\nexport const setFileUploadList = (files) => {\n   return {\n        type: 'SET_FILE_UPLOAD_LIST',\n        value: files\n    };\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    enterToDirectory, setContextMenuVisible, toggleSelectedFile, setContextMenuPosition,\n    setSelectedFileFromLastTo, getFileContent, getFileContentForEdit, \n    rightClickOnFile, setSelectedFiles\n} from '../../Actions/Actions.js';\nimport './File.css';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport blue from '@material-ui/core/colors/blue';\nimport config from '../../config.js';\nimport { getHumanFileSize } from '../../Api/ApiHandler';\n\nclass File extends Component {\n    render() {\n        const { isSelected, type, name, size, handleClick, handleDoubleClick, handleContextMenu } = this.props;\n        const avatarStyle = {\n            backgroundColor: isSelected ? blue['A200'] : null\n        };\n        const realSize = typeof size !== 'undefined' && type !== 'dir' ? getHumanFileSize(size) : null;\n        return (\n            <div className=\"File\" onClick={handleClick} onDoubleClick={handleDoubleClick} onContextMenu={handleContextMenu} data-selected={isSelected}>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar style={avatarStyle}>\n                            { type === 'dir' ? <FolderIcon /> : <FileIcon />}\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText className=\"filename\" primary={name} secondary={realSize} />\n                </ListItem>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        filePath: [...state.path, ownProps.name],\n        isSelected: !!state.selectedFiles.find(f => f.name === ownProps.name)\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleDoubleClick: (event) => {\n            if (ownProps.type === 'file') {\n                if (config.isEditableFilePattern.test(ownProps.name) || ownProps.editable) {\n                    dispatch(getFileContentForEdit(ownProps.name));\n                } else if (config.isImageFilePattern.test(ownProps.name)) {\n                    dispatch(getFileContent(ownProps.name));\n                }\n                return;\n            }\n\n            dispatch(enterToDirectory(ownProps.name));\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleContextMenu: (event) => {\n            event.preventDefault();\n            event.stopPropagation();\n\n            const x = event.clientX || (event.touches && event.touches[0].pageX);\n            const y = event.clientY || (event.touches && event.touches[0].pageY);\n\n            if (event.shiftKey) {\n                dispatch(setSelectedFileFromLastTo(ownProps));\n            } else {\n                dispatch(rightClickOnFile(ownProps));\n            }\n            \n            dispatch(setContextMenuVisible(true));\n            dispatch(setContextMenuPosition(x, y));\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleClick: (event) => {\n            event.stopPropagation();\n\n            if (event.ctrlKey) {\n                dispatch(toggleSelectedFile(ownProps));\n            } else if (event.shiftKey) {\n                dispatch(setSelectedFileFromLastTo(ownProps));\n            } else {\n                dispatch(setSelectedFiles([ownProps]));\n            }\n        }\n    };\n};\n\nFile.propTypes = {\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    size: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]),\n    editable: PropTypes.oneOfType([\n        PropTypes.bool, PropTypes.number\n    ])\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(File);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './FileListEmptyMessage.css';\n\nclass FileListEmptyMessage extends Component {\n    render() {\n        return (\n            <div className=\"FileListEmptyMessage\">\n                No files in this folder\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileListEmptyMessage);\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = theme => ({\n  progress: {\n    margin: theme.spacing.unit * 10,\n  },\n});\n\nfunction Loader(props) {\n    const { classes } = props;\n    return (\n        <Grid container justify=\"center\">\n            <CircularProgress className={classes.progress} color=\"secondary\" />\n        </Grid>\n    );\n}\n\nLoader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Loader);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport File from '../File/File.jsx'; \nimport FileListEmptyMessage from './FileListEmptyMessage';\nimport Loader from '../Loader/Loader.jsx'; \nimport './FileList.css';\n\nclass FileList extends Component {\n    render() {\n        const { fileList, loading } = this.props;\n        \n        const fileListComponent = fileList.map((file, key) => {\n            return <File type={file.type} name={file.name} editable={file.editable} size={file.size} key={key} />\n        });\n\n        return <div className=\"FileList\">\n            { loading ? \n                <Loader /> : \n                fileListComponent.length ? fileListComponent : <FileListEmptyMessage />\n            }\n        </div>\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    const filteredList = state.fileList.filter(\n        file => state.fileListFilter ? file.name.toLocaleLowerCase().match(state.fileListFilter.toLocaleLowerCase()) : true\n    );\n    return {\n        fileList: filteredList,\n        loading: state.loading\n    };\n};\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleClick: (event) => {\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileList);\n\n\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\nimport { setVisibleDialogCreateFolder } from '../../../Actions/Actions.js';\n\nfunction CreateFolderAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <CreateNewFolderIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Create folder\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogCreateFolder(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateFolderAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { setVisibleDialogUploadFile } from '../../../Actions/Actions.js';\n\nfunction UploadFileAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <CloudUploadIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Upload files\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogUploadFile(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadFileAction);\n","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { connect } from 'react-redux';\nimport CreateFolderAction from '../ContextMenu/ContextMenuActions/CreateFolderAction.jsx';\nimport UploadFileAction from '../ContextMenu/ContextMenuActions/UploadFileAction.jsx';\n\nclass ThreeDotsMenu extends React.Component {\n  state = {\n    anchorEl: null,\n  };\n\n  handleClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  render() {\n    const { anchorEl } = this.state;\n    return (\n      <div style={{marginLeft:'1em'}}>\n        <IconButton color=\"inherit\" \n          aria-label=\"More\"\n          aria-owns={Boolean(anchorEl) ? 'long-menu' : undefined}\n          aria-haspopup=\"true\"\n          onClick={this.handleClick}>\n          <MoreVertIcon />\n        </IconButton>\n\n        <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={this.handleClose}>\n          <CreateFolderAction handleClose={this.handleClose} />\n          <UploadFileAction handleClose={this.handleClose} />\n        </Menu>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ThreeDotsMenu);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport Button from '@material-ui/core/Button';\nimport './BreadcrumbText.css';\n\nconst styles = theme => ({\n  lastPath: {\n    display: 'block',\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  paths: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    }\n  }\n});\n\nclass BreadcrumbText extends Component {\n\n    render() {\n        const { classes, handleClickPath, path, rootTitle, handleGoBack, canGoBack } = this.props;\n\n        const separator = <span>&gt;</span>;\n        const rootPath = <span onClick={(e) => handleClickPath(e, -1, path)} data-index={0}>\n            { rootTitle } { path.length ? separator : '' }\n        </span>;\n        const lastPath = [...path].pop() || rootTitle;\n\n        const directories = path.map((dir, index) => {\n            return <span key={index} data-index={index} onClick={(e) => handleClickPath(e, index, path)}>\n                <span>{dir}</span> { path.length -1 !== index ? separator : '' }&nbsp;\n            </span>\n        });\n\n        return (\n            <div className=\"BreadcrumbText\">\n                <div className={classes.lastPath}>\n                    <Button onClick={handleGoBack} color=\"inherit\" type=\"button\" style={{display: canGoBack ? 'inline-flex' : 'none'}}>\n                        <KeyboardArrowLeftIcon />\n                    </Button>\n                    {lastPath}\n                </div>\n                <div className={classes.paths}>{rootPath} {directories}</div>\n            </div>\n        );\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(BreadcrumbText));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { connect } from 'react-redux';\nimport { setFileListFilter, enterToPreviousDirectoryByIndex } from '../../Actions/Actions.js';\nimport ThreeDotsMenu from './ThreeDotsMenu.jsx';\nimport BreadcrumbText from '../Breadcrumb/BreadcrumbText.jsx';\nimport { enterToPreviousDirectory } from '../../Actions/Actions.js';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginBottom: '4.3em'\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'block', // was none\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto',\n      display: 'block'\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 100,\n      '&:focus': {\n        width: 200,\n      },\n    },\n  },\n});\n\nfunction SearchAppBar(props) {\n  const { classes, path, handleClickPath, handleGoBack, canGoBack } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n            <BreadcrumbText \n                path={path} \n                handleClickPath={handleClickPath} \n                handleGoBack={handleGoBack}\n                canGoBack={canGoBack}\n                rootTitle=\"React Filemanager\"\n            />\n          </Typography>\n          <div className={classes.grow} />\n\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              value={props.value}\n              onChange={props.handleChange}\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n            />\n          </div>\n          <ThreeDotsMenu />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nSearchAppBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n        value: state.fileListFilter || '',\n        path: state.path,\n        canGoBack: state.path.length\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleChange: (event) => {\n            dispatch(setFileListFilter(event.currentTarget.value));\n        },\n        handleGoBack: (event) => {\n            dispatch(enterToPreviousDirectory());\n        },\n        /**\n         * @param {Object} event\n         * @param {Number} index\n         * @param {Array} path\n         * @returns {undefined}\n         */        \n        handleClickPath: (event, index) => {\n            dispatch(enterToPreviousDirectoryByIndex(index));\n            event.preventDefault();\n        }\n    };\n};\n\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(SearchAppBar));\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { getFileContent, enterToDirectory } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\n\nfunction OpenAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <OpenInBrowserIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Open\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            if (selectedFiles[0].type === 'dir') {\n                dispatch(enterToDirectory(selectedFiles[0].name));\n                return;\n            }\n            dispatch(getFileContent(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { removeItems } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nfunction RemoveAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <DeleteIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Remove\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(removeItems(selectedFiles));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RemoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\nimport { initSubList, setVisibleDialogMove } from '../../../Actions/Actions.js';\n\nfunction MoveAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <HowToVoteIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Move\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(initSubList());\n            dispatch(setVisibleDialogMove(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport { initSubList, setVisibleDialogCopy } from '../../../Actions/Actions.js';\n\nfunction CopyAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <FileCopyIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Copy\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(initSubList());\n            dispatch(setVisibleDialogCopy(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CopyAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { getFileContentForEdit } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\n\nfunction OpenAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <OpenInBrowserIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Edit\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(getFileContentForEdit(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport WrapTextIcon from '@material-ui/icons/WrapText';\nimport { setVisibleDialogRename } from '../../../Actions/Actions.js';\n\nfunction MoveAction(props) {\n    const {handleClick, selectedFiles} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <WrapTextIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Rename\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(setVisibleDialogRename(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { downloadFile } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\n\nfunction DownloadAction(props) {\n    const {handleClick, selectedFiles} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\n            <ListItemIcon>\n                <CloudDownloadIcon   />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Download\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedFiles) => {\n            dispatch(downloadFile(selectedFiles[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DownloadAction);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './ContextMenu.css';\nimport Menu from '@material-ui/core/Menu';\nimport { getActionsByMultipleFiles } from '../../Api/ApiHandler.js';\nimport OpenAction from './ContextMenuActions/OpenAction.jsx';\nimport RemoveAction from './ContextMenuActions/RemoveAction.jsx';\nimport MoveAction from './ContextMenuActions/MoveAction.jsx';\nimport CopyAction from './ContextMenuActions/CopyAction.jsx';\nimport EditAction from './ContextMenuActions/EditAction.jsx';\nimport RenameAction from './ContextMenuActions/RenameAction.jsx';\nimport DownloadAction from './ContextMenuActions/DownloadAction.jsx';\n\nclass ContextMenu extends Component {\n\n    render() {\n        const { acts, visible, x, y } = this.props;\n        const actionsComp = acts.map((act, key) => {\n            let component;\n            if (act === 'open') {\n                component = <OpenAction key={key} />;\n            }\n            if (act === 'edit') {\n                component = <EditAction key={key} />;\n            }\n            if (act === 'copy') {\n                component = <CopyAction key={key} />;\n            }            \n            if (act === 'move') {\n                component = <MoveAction key={key} />;\n            }\n            if (act === 'rename') {\n                component = <RenameAction key={key} />;\n            }\n            if (act === 'download') {\n                component = <DownloadAction key={key} />;\n            }\n            if (act === 'remove') {\n                component = <RemoveAction key={key} />;\n            }\n            return component;\n        });\n\n        return (\n            <div> \n                <Menu \n                    anchorReference=\"anchorPosition\"\n                    anchorPosition={{ top: y, left: x }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left',\n                    }}\n                    open={visible} \n                    onClose={ () => {} } \n                    PaperProps={{ style: {width: 170} }}>\n                    { actionsComp }\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        x: state.contextMenuPosition[0] || 0,\n        y: state.contextMenuPosition[1] || 0,\n        visible: !!state.contextMenuVisible,\n        acts: getActionsByMultipleFiles(state.selectedFiles),\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContextMenu);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogContent } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        lastBlobUrl: null,\n        content: '...',\n        loading: false\n    };\n\n    componentDidUpdate() {\n        if (this.props.blobUrl !== this.state.lastBlobUrl) {\n            this.setState({\n                lastBlobUrl: this.props.blobUrl\n            });\n            this.setState({\n                loading: true\n            });\n        }\n    }\n\n    render() {\n        const { handleClose, open } = this.props;\n        return (\n          <div style={{marginLeft:'1em'}}>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-content\" fullWidth={true} maxWidth={'sm'}>\n              <DialogTitle id=\"form-dialog-content\">Viewing file </DialogTitle>\n              <DialogContent>\n                <img src={this.props.blobUrl} alt=\"\" style={{maxWidth: '100%'}}/>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogContent,\n        blobUrl: state.fileContentBlobUrl\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setVisibleDialogContent(false));\n        },\n        handleOpen: (event) => {\n            dispatch(setVisibleDialogContent(true));\n        },\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogEdit } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        lastBlobUrl: null,\n        content: null,\n        loading: false\n    };\n\n    componentDidUpdate() {\n        if (this.props.blobUrl !== this.state.lastBlobUrl) {\n            this.setState({\n                lastBlobUrl: this.props.blobUrl\n            });\n            this.setState({\n                loading: true\n            });\n\n            this.props.blobUrl && fetch(this.props.blobUrl).then(r => {\n                return r.text();\n            }).then(t => {\n                this.setState({\n                    content: t\n                });\n                this.setState({\n                    loading: false\n                });\n            });\n        }\n    }\n\n    render() {\n        const { handleClose, handleSave, open } = this.props;\n        const textAreaStyle = {\n            width: '100%',\n            minHeight: '300px'\n        };\n        const textArea = <textarea style={textAreaStyle} defaultValue={this.state.content || ''} />;\n\n        return (\n          <div>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-edit\" fullWidth={true} maxWidth={'sm'}>\n              <DialogTitle id=\"form-dialog-edit\">Editing file </DialogTitle>\n              <DialogContent>\n                  <DialogContentText>\n                    { this.state.loading ? 'Loading...' : textArea }\n                  </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                    Close\n                </Button>\n                <Button color=\"primary\" onClick={handleSave} type=\"submit\">\n                    Update\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogEdit,\n        blobUrl: state.fileContentBlobUrl\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setVisibleDialogEdit(false));\n        },\n        handleOpen: (event) => {\n            dispatch(setVisibleDialogEdit(true));\n        },\n        handleSave: (event) => {\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { createNewFolder, setVisibleDialogCreateFolder } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleSave, value, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-folder\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-create-folder\">Create folder</DialogTitle>\n                  <DialogContent>\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Folder name\" type=\"text\" value={value} />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleSave}>\n                      Save\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        createFolderName: state.createFolderName,\n        open: state.visibleDialogCreateFolder\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogCreateFolder(false));\n        },\n        handleSave: event => {\n            event.preventDefault();\n            const folderName = event.currentTarget.form.querySelector('input').value;\n            dispatch(createNewFolder(folderName));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { renameItem, setVisibleDialogRename } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        value: ''\n    };\n\n    componentWillReceiveProps (props) {\n        this.setState({value: props.realName});\n    }\n\n    handleChange (event) {\n        this.setState({value: event.currentTarget.form.querySelector('input').value});\n    }\n\n    handleSave (event) {\n        this.props.handleSave(event)(this.props.realName, this.state.value);\n    }\n\n    render() {\n        const { value } = this.state;\n        const { handleClose, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-folder\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-create-folder\">Rename</DialogTitle>\n                  <DialogContent>\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Item name\" type=\"text\" onChange={this.handleChange.bind(this)} value={value} />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={this.handleSave.bind(this)}>\n                      Save\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogRename,\n        realName: state.selectedFiles.length ? state.selectedFiles[0].name : ''\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogRename(false));\n        },\n        handleSave: event => (realName, newName) => {\n            event.preventDefault();\n            dispatch(renameItem(realName, newName));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { \n    setSelectedFolderSublist, enterToDirectorySublist \n} from '../../../Actions/Actions.js';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport blue from '@material-ui/core/colors/blue';\nimport '../File.css';\n\nconst styles = theme => ({\n});\n\n\nclass FileSublist extends Component {\n    render() {\n        const { type, name, handleClick, isSelected, handleDoubleClick } = this.props;\n        const avatarStyle = {\n            backgroundColor: isSelected ? blue['A200'] : null\n        };\n        return (\n            <div className=\"File\" onClick={handleClick} data-selected={isSelected} onDoubleClick={handleDoubleClick}>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar style={avatarStyle}>\n                            { type === 'dir' ? <FolderIcon /> : <FileIcon />}\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={name} secondary=\"\" />\n                </ListItem>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        filePath: [...state.path, ownProps.name],\n        isSelected: state.selectedFolderSublist && (state.selectedFolderSublist.name === ownProps.name)\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleDoubleClick: (event) => {\n            dispatch(enterToDirectorySublist(ownProps.name));\n            dispatch(setSelectedFolderSublist(null));\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleClick: (event) => {\n            event.stopPropagation(); \n            dispatch(setSelectedFolderSublist(ownProps));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FileSublist));\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FileSublist from '../../File//FileSublist/FileSublist.jsx'; \nimport Loader from '../../Loader/Loader.jsx'; \nimport FileListEmptyMessage from '../FileListEmptyMessage';\nimport './FileListSublist.css'; \n\nclass FileListSublist extends Component {\n    render() {\n        const { fileList, loadingSublist } = this.props;\n        \n        const fileListComponent = fileList.map((file, key) => {\n            return <FileSublist type={file.type} name={file.name} key={key} />\n        });\n\n        return <div className=\"FileListSublist\">\n            { loadingSublist ? \n                <Loader /> : \n                fileListComponent.length ? fileListComponent : <FileListEmptyMessage />\n            }\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const filteredList = state.fileListSublist\n        .filter(file => file.type === 'dir')\n        .filter(file => state.path.join('').trim() === state.pathSublist.join('').trim() ? \n            !state.selectedFiles.find(f => f.name === file.name) : true\n        );\n    return {\n        fileList: filteredList,\n        loadingSublist: state.loadingSublist,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileListSublist);","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogMove, setSelectedFolderSublist, enterToPreviousDirectorySublist, moveItems } from '../../../Actions/Actions.js';\nimport FileListSublist from '../../FileList/FileListSublist/FileListSublist.jsx'; \nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { \n            selectedPath, handleClose, handleSave, open, \n            selectedFiles, canGoBack, canMove, handleGoBack \n        } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-move\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-move\">\n                        Move files to <small style={{color: 'grey'}}>{ selectedPath.join('/') }</small>\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileListSublist />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleGoBack} color=\"primary\" type=\"button\" disabled={!canGoBack}>\n                            <KeyboardArrowLeftIcon /> Go back directory\n                        </Button>\n\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={(e) => handleSave(e, selectedFiles)} disabled={!canMove} type=\"submit\">\n                            Move\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // prevent moving to same folder\n    const canMove = state.path.join('') !== state.pathSublist.join('') + (state.selectedFolderSublist ? state.selectedFolderSublist.name : '');\n\n    return {\n        open: state.visibleDialogMove,\n        selectedFolderSublist: state.selectedFolderSublist,\n        selectedPath: state.selectedFolderSublist ? [...state.pathSublist, state.selectedFolderSublist.name] : [],\n        selectedFiles: state.selectedFiles,\n        pathSublist: state.pathSublist,\n        canGoBack: state.pathSublist.length,\n        canMove: state.selectedFolderSublist && canMove\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(setVisibleDialogMove(false));\n        },\n        handleSave: (event, selectedFiles) => {\n            dispatch(moveItems(selectedFiles));\n        },\n        handleGoBack: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(enterToPreviousDirectorySublist());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogCopy, setSelectedFolderSublist, enterToPreviousDirectorySublist, copyItems } from '../../../Actions/Actions.js';\nimport FileListSublist from '../../FileList/FileListSublist/FileListSublist.jsx'; \nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { \n            selectedPath, handleClose, handleSave, open, \n            canGoBack, canCopy, selectedFiles, handleGoBack \n        } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-copy\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-copy\">\n                        Copy files to <small style={{color: 'grey'}}>{ selectedPath.join('/') }</small>\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileListSublist />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleGoBack} color=\"primary\" type=\"button\" disabled={!canGoBack}>\n                            <KeyboardArrowLeftIcon /> Go back directory\n                        </Button>\n\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={(e) => handleSave(e, selectedFiles)} disabled={!canCopy} type=\"submit\">\n                            Copy\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // prevent copying to same folder\n    const canCopy = state.path.join('') !== state.pathSublist.join('') + (state.selectedFolderSublist ? state.selectedFolderSublist.name : '');\n\n    return {\n        open: state.visibleDialogCopy,\n        selectedFolderSublist: state.selectedFolderSublist,\n        selectedPath: state.selectedFolderSublist ? [...state.pathSublist, state.selectedFolderSublist.name] : [],\n        canGoBack: state.pathSublist.length,\n        canCopy: state.selectedFolderSublist && canCopy,\n        selectedFiles: state.selectedFiles\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(setVisibleDialogCopy(false));\n        },\n        handleSave: (event, selectedFiles) => {\n            dispatch(copyItems(selectedFiles));\n        },\n        handleGoBack: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(enterToPreviousDirectorySublist());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport { getHumanFileSize } from '../../Api/ApiHandler';\n\nfunction UploadFileList(props) {\n    const { files } = props;\n    const list = files.map((f, i) =>\n        <ListItem dense key={i}>\n            <ListItemIcon>\n                <FileIcon />\n            </ListItemIcon>\n            <ListItemText primary={`${f.name} (${getHumanFileSize(f.size)})`} />\n        </ListItem>\n    );\n\n    return (\n        <div>\n            <List component=\"nav\">\n                {list}\n            </List>\n        </div>\n    );\n}\n\nUploadFileList.propTypes = {\n    files: PropTypes.array.isRequired\n};\n\nexport default UploadFileList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport UploadFileList from './UploadFileList';\n\nclass FileUploader extends Component {\n\n    handleReset(event) {\n        this.refs.inputfile.value = '';\n        this.props.handleReset(event);\n    }\n\n    render() {\n        const { fileUploadList, handleSelectedFiles } = this.props;\n        const styles = {\n            inputfile: {\n                display: 'none'\n            }, inputreset: {\n                display: fileUploadList.length ? 'inline-flex' : 'none'\n            }\n        }\n\n        return (\n            <div>\n                <label htmlFor=\"button-file\">\n                    <input style={styles.inputfile} id=\"button-file\" ref=\"inputfile\" multiple type=\"file\" onChange={handleSelectedFiles} />\n                    <Button component=\"span\" variant=\"contained\" color=\"primary\">\n                        Select Files\n                    </Button>\n                </label>\n\n                <Button style={styles.inputreset} component=\"span\" type=\"reset\" onClick={this.handleReset.bind(this)}>\n                    Clear\n                </Button>\n\n                <UploadFileList files={fileUploadList} />\n            </div>\n        );\n    }\n}\n\nFileUploader.propTypes = {\n    fileUploadList: PropTypes.array.isRequired,\n    handleReset: PropTypes.func.isRequired,\n    handleSelectedFiles: PropTypes.func.isRequired,\n};\n\nexport default FileUploader;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { connect } from 'react-redux';\nimport { resetFileUploader, uploadFiles, setFileUploadList } from '../../../Actions/Actions.js';\nimport FileUploader from '../../FileUploader/FileUploader.jsx';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleReset, handleUpload, open, canUpload, fileUploadProgress, fileUploadList, handleSelectedFiles } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-upload\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-upload\">\n                        Upload files\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileUploader handleUpload={handleUpload} fileUploadList={fileUploadList} handleSelectedFiles={handleSelectedFiles} handleReset={handleReset}/>\n                        {canUpload ? <LinearProgress variant=\"determinate\" value={fileUploadProgress} /> : null }\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={handleUpload} disabled={!canUpload} type=\"submit\">\n                            Upload\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogUploadFile,\n        canUpload: state.fileUploadList.length,\n        fileUploadList: state.fileUploadList,\n        fileUploadProgress: state.fileUploadProgress\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(resetFileUploader());\n        },\n        handleUpload: (event) => {\n            event.preventDefault();\n            const files = event.currentTarget.form.querySelector('input[type=file]').files;\n            dispatch(uploadFiles(files));\n        },\n        handleSelectedFiles: (event) => {\n            dispatch(setFileUploadList(\n                [...event.target.files].map(f => ({name: f.name, size: f.size}))\n            ));\n        },\n        handleReset: (event) => {\n            dispatch(setFileUploadList([]));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React from 'react';\nimport DialogContent from './Content/Content.jsx';\nimport DialogEdit from './Edit/Edit.jsx';\nimport DialogCreateFolder from './CreateFolder/CreateFolder.jsx';\nimport DialogRename from './Rename/Rename.jsx';\nimport DialogMove from './Move/Move.jsx';\nimport DialogCopy from './Copy/Copy.jsx';\nimport DialogUploadFile from './UploadFile/UploadFile.jsx';\n\nfunction Dialogs(props) {\n    return (\n        <div className=\"Dialogs\">\n            <DialogContent />\n            <DialogEdit />\n            <DialogCreateFolder />\n            <DialogMove />\n            <DialogCopy />\n            <DialogRename />\n            <DialogUploadFile />\n        </div>\n    );\n}\n\nexport default Dialogs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { connect } from 'react-redux';\n\nconst styles = theme => ({\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n});\n\nclass DynamicSnackbar extends React.Component {\n  render() {\n    const { classes, errorMsg, handleClose, open, notificationDuration } = this.props;\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={open}\n          autoHideDuration={notificationDuration}\n          onClose={handleClose}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{errorMsg}</span>}\n          action={[\n            <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" className={classes.close} onClick={handleClose} >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nDynamicSnackbar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        open: !!state.errorMsg,\n        errorMsg: state.errorMsg,\n        notificationDuration: state.notificationDuration || 60000\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch({\n                type: 'SET_ERROR_MSG',\n                value: null\n            });\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DynamicSnackbar));\n\n","import React, { Component } from 'react';\nimport FileList from './Components/FileList/FileList.jsx';\nimport Navbar from './Components/Navbar/Navbar.jsx';\nimport ContextMenu from './Components/ContextMenu/ContextMenu.jsx';\nimport Dialogs from './Components/Dialogs/Dialogs.jsx';\n\nimport { MuiThemeProvider as MaterialUI, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport { connect } from 'react-redux';\nimport { setContextMenuVisible, refreshFileList } from './Actions/Actions.js';\nimport DynamicSnackbar from './Components/Notification/DynamicSnackbar.jsx'; \n\nconst theme = createMuiTheme({\n    palette: {\n        primary: blue,\n    },\n    typography: {\n        useNextVariants: true,\n    }\n});\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.init();\n    };\n\n    render() {\n        return (\n            <MaterialUI theme={theme}>\n                <div onClick={this.props.handleHideContextMenu} onContextMenu={this.props.handleHideContextMenu}>\n                    <Navbar />\n                    <FileList />\n                    <ContextMenu />\n                    <DynamicSnackbar />\n                    <Dialogs />\n                </div>\n            </MaterialUI>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        init: () => {\n            dispatch(refreshFileList());\n        },\n\n        handleHideContextMenu: (event) => {\n            if (! (event.target.tagName === 'INPUT' || /label/i.test(event.target.className))) {\n                event.preventDefault();\n            }\n            dispatch(setContextMenuVisible(false));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux'\nimport MainReducer from './Reducers/MainReducer'\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport './index.css';\n\nconst store = createStore(MainReducer, applyMiddleware(thunk));\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}